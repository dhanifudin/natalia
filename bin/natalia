#!/usr/bin/env node

var program = require('commander');
var mkdirp = require('mkdirp');
var os = require('os');
var fs = require('fs');
var path = require('path');
var readline = require('readline');

var pkg = require('../package.json');
var version = pkg.version;

program
  .version(version)
  .usage('[options] [args]')
  .option('-n, --new', 'generate new site')
  .option('-p, --post', 'generate new post')
  .parse(process.argv);

  main();

function main() {
  console.log('main');
  var destinationPath = program.args.shift() || '.';
  var appName = path.basename(path.resolve(destinationPath));

  if (program.new)
    createSite(destinationPath);
  else if (program.post)
    createPost();
}

function createSite(path) {
  mkdir(path, function() {
    mkdir(path + '/app');
    mkdir(path + '/assets');
    mkdir(path + '/assets/css');
    mkdir(path + '/assets/js');
    mkdir(path + '/layouts');
    mkdir(path + '/posts');
    /* complete(); */
  });
}

function createPost() {

}

/* Function Helpers {{{ */
function loadTemplate(name) {
  return fs.readFileSync(path.join(__dirname, '..', 'templates', name), 'utf-8');
}

function write(path, str, mode) {
  fs.writeFileSync(path, str, { mode: mode || 0666 });
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
}

function mkdir(path, fn) {
  mkdirp(path, 0755, function(err){
    if (err) throw err;
    console.log('   \033[36mcreate\033[0m : ' + path);
    fn && fn();
  });
}

